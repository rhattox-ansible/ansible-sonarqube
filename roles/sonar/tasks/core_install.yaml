- name: Download and Extract
  block:
    - name: Download Tar
      ansible.builtin.get_url:
        url: "{{ app_archive_url }}"
        dest: "{{ app_tmp_file }}"
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"
        mode: "0550"

    - name: Create temporary directory
      ansible.builtin.file:
        path: "{{ app_tmp_path }}"
        state: directory
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"
        mode: "0550"

    - name: Extract Archive to temporary path
      ansible.builtin.unarchive:
        src: "{{ app_tmp_file }}"
        dest: "{{ app_tmp_path }}"
        remote_src: true

- name: Update the path and installs
  block:
    - name: Copy Content from tar to home
      ansible.builtin.copy:
        remote_src: true
        src: "{{ app_tmp_path }}/"
        dest: "{{ app_home }}"
        mode: "0550"
        owner: "{{ app_name }}"
        group: "{{ app_name }}"

    - name: Creates Symlink
      ansible.builtin.file:
        src: "{{ app_home }}/sonarqube-{{ app_version }}/bin/linux-x86-64/sonar.sh"
        dest: "/usr/bin/sonar"
        mode: "0777"
        owner: "{{ app_name }}"
        group: "{{ app_name }}"
        state: link

- name: Update web context for sonarQ
  ansible.builtin.template:
    src: "roles/sonarqube/templates/sonar.properties.j2"
    dest: "{{ app_home }}/sonarqube-{{ app_version }}/conf/sonar.properties"
    owner: "{{ app_name }}"
    group: "{{ app_name }}"
    mode: "0644"

- name: Generate SystemD Config
  ansible.builtin.template:
    src: roles/sonarqube/templates/sonar.service.j2
    dest: "/etc/systemd/system/sonar.service"
    group: "{{ app_name }}"
    owner: "{{ app_name }}"
    mode: "0755"
