- name: Create service user
  block:
    - name: Create sonar group
      ansible.builtin.group:
        name: "{{ sonar_group }}"
        state: present

    - name: Create sonar user
      ansible.builtin.user:
        name: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        createhome: false

- name: Create sonar home directory
  ansible.builtin.file:
    path: "{{ sonar_home }}"
    state: directory
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "0755"

- name: Download and Extract
  block:
    - name: Download sonar tar file
      ansible.builtin.get_url:
        url: "{{ sonar_archive_url }}"
        dest: "{{ sonar_tmp_file }}"
        mode: "0755"

    - name: Create temporary directory
      ansible.builtin.file:
        path: "{{ sonar_tmp_path }}"
        state: directory
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"
        mode: "0755"

    - name: Extract sonar archive to temporary path
      ansible.builtin.unarchive:
        src: "{{ sonar_tmp_file }}"
        dest: "{{ sonar_tmp_path }}"
        remote_src: true

- name: Update the path and installs sonar
  block:
    - name: Extract sonar archive to temporary path
      ansible.builtin.copy:
        src: "{{ sonar_tmp_path }}/"
        dest: "{{ sonar_home }}"
        remote_src: true
        mode: "0755"
        owner: "{{ sonar_user }}"
        group: "{{ sonar_group }}"

    - name: Creates Symlink
      ansible.builtin.file:
        src: "{{ sonar_home }}/sonarqube-{{ sonar_version }}/bin/linux-x86-64/sonar.sh"
        dest: "/usr/bin/sonar"
        mode: "0777"
        owner: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        state: link

- name: Update web context for sonarQ
  ansible.builtin.template:
    src: "roles/sonarqube/templates/sonar.properties.j2"
    dest: "{{ sonar_home }}/sonarqube-{{ sonar_version }}/conf/sonar.properties"
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "0644"

- name: Generate SystemD Config
  ansible.builtin.template:
    src: roles/sonarqube/templates/sonar.service.j2
    dest: "/etc/systemd/system/sonar.service"
    group: "{{ sonar_group }}"
    owner: "{{ sonar_user }}"
    mode: "0755"

- name: Reload Systemd to recognize the new service
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start the service
  ansible.builtin.systemd:
    name: sonar.service
    state: started
    enabled: true
